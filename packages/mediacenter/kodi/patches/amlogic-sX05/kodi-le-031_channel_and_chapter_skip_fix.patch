--- a/xbmc/cores/VideoPlayer/VideoPlayer.cpp	2017-04-24 19:29:12.904035000 +0200
+++ b/xbmc/cores/VideoPlayer/VideoPlayer.cpp	2017-04-24 19:29:12.904035000 +0200
@@ -1958,15 +1958,34 @@
       // care for live streams
       else if (m_pInputStream->IsRealtime())
       {
-        if (m_CurrentAudio.id >= 0)
+        if (m_CurrentAudio.id >= 0 && m_clock.GetClock() > DVD_MSEC_TO_TIME(0))
         {
           double adjust = -1.0; // a unique value
-          if (m_clock.GetSpeedAdjust() >= 0 && m_VideoPlayerAudio->GetLevel() < 5)
-            adjust = -0.05;
-
-          if (m_clock.GetSpeedAdjust() < 0 && m_VideoPlayerAudio->GetLevel() > 10)
+          if ( m_VideoPlayerAudio->GetLevel() > 20 && m_VideoPlayerVideo->GetLevel() < 1) {
+            CLog::Log(LOGNOTICE, "VideoPlayer:Full caching video aq:%d vq:%d", m_VideoPlayerAudio->GetLevel(), m_VideoPlayerVideo->GetLevel()); 
+            SetCaching(CACHESTATE_FULL);
+            usleep(400000);
+            SetCaching(CACHESTATE_PLAY);
+          }
+          if (m_clock.GetSpeedAdjust() < -0.05 && m_VideoPlayerAudio->GetLevel() < 1 && m_VideoPlayerVideo->GetLevel() < 3) {
+            CLog::Log(LOGNOTICE, "VideoPlayer:Full caching aq:%d vq:%d", m_VideoPlayerAudio->GetLevel(), m_VideoPlayerVideo->GetLevel());
+            SetCaching(CACHESTATE_FULL);
+            usleep(200000);
+            SetCaching(CACHESTATE_PLAY);
+          }
+          if (m_clock.GetSpeedAdjust() >= -0.05 && m_VideoPlayerAudio->GetLevel() < 1 && m_VideoPlayerVideo->GetLevel() < 3) {
+            CLog::Log(LOGNOTICE, "VideoPlayer:Prep caching aq:%d vq:%d clock:%0.3f", m_VideoPlayerAudio->GetLevel(), m_VideoPlayerVideo->GetLevel(),  m_clock.GetClock());  
+            adjust = -0.06; 
+            usleep(50000);
+          }
+          if (m_clock.GetSpeedAdjust() >= 0 && m_VideoPlayerAudio->GetLevel() < 3) {
+            CLog::Log(LOGDEBUG, "VideoPlayer:Speed adjust:-0.05 aq:%d vq:%d", m_VideoPlayerAudio->GetLevel(), m_VideoPlayerVideo->GetLevel());  
+             adjust = -0.05;
+          }
+          if (m_clock.GetSpeedAdjust() < 0 && m_VideoPlayerAudio->GetLevel() > 5) {
+            CLog::Log(LOGDEBUG, "VideoPlayer:Speed adjust:0.0 aq:%d vq:%d", m_VideoPlayerAudio->GetLevel(), m_VideoPlayerVideo->GetLevel());  
             adjust = 0.0;
-
+          }
           if (adjust != -1.0)
           {
             m_clock.SetSpeedAdjust(adjust);
@@ -2024,7 +2042,10 @@
       else if (m_CurrentAudio.starttime != DVD_NOPTS_VALUE && m_CurrentAudio.packets > 0)
       {
-        if (m_pInputStream->IsRealtime())
-          clock = m_CurrentAudio.starttime - m_CurrentAudio.cachetotal - DVD_MSEC_TO_TIME(400);
+        if (m_pInputStream->IsRealtime()) {
+          clock = m_CurrentAudio.starttime- DVD_MSEC_TO_TIME(1000); // - m_CurrentAudio.cachetime;
+	 //  if (clock > - DVD_MSEC_TO_TIME(700)) 
+	 //    clock = - DVD_MSEC_TO_TIME(700);
+        }
         else
           clock = m_CurrentAudio.starttime - m_CurrentAudio.cachetime;
         if (m_CurrentVideo.starttime != DVD_NOPTS_VALUE &&
@@ -2600,7 +2621,8 @@  fix flush buffers
       // This should always be the case.
       if(m_pDemuxer && m_pDemuxer->SeekChapter(msg.GetChapter(), &start))
       {
+        CLog::Log(LOGDEBUG, "VideoPlayer: SeekChapter:%d beforeSeek:%ld start:%ld",  msg.GetChapter(), beforeSeek, (int64_t)DVD_TIME_TO_MSEC(start)); 
+        FlushBuffers(DVD_MSEC_TO_TIME(beforeSeek), true, true);
-        FlushBuffers(start, true, true);
-        offset = DVD_TIME_TO_MSEC(start) - beforeSeek;
+        offset = beforeSeek - DVD_TIME_TO_MSEC(start);
         m_callback.OnPlayBackSeekChapter(msg.GetChapter());
       }
--- a/xbmc/cores/VideoPlayer/VideoPlayerAudio.cpp	2017-05-11 10:02:20.000000000 +0200
+++ b/xbmc/cores/VideoPlayer/VideoPlayerAudio.cpp	2017-05-13 18:17:17.382162000 +0200
@@ -268,12 +268,14 @@
         // while AE sync is active, we still have time to fill buffers
         if (m_syncTimer.IsTimePast())
         {
-          CLog::Log(LOGNOTICE, "CVideoPlayerAudio::Process - stream stalled");
+          CLog::Log(LOGNOTICE, "CVideoPlayerAudio::Process - stream stalled timeout:%d initialTimeout:%d startTime:%d MillisLeft:%d", timeout,  m_syncTimer.GetInitialTimeoutValue(), m_syncTimer.GetStartTime(), m_syncTimer.MillisLeft());
-          m_stalled = true;
+          m_stalled = true;
         }
       }
-      if (timeout == 0)
-        Sleep(10);
+      if (timeout == 0) {
+        CLog::Log(LOGNOTICE, "CVideoPlayerAudio::Process - sleep 0.1 sec");
+        usleep(100000);
+      }
       continue;
     }
 

