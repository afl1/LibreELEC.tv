From: afl1
Date: 2017/10/05
Subject: [PATCH] VideoPlayer: chapter seek fix

--- a/xbmc/cores/VideoPlayer/VideoPlayer.cpp
+++ b/xbmc/cores/VideoPlayer/VideoPlayer.cpp
@@ -2619,6 +2641,7 @@ void CVideoPlayer::HandleMessages()
       {
-        FlushBuffers(start, true, true);
-        offset = DVD_TIME_TO_MSEC(start) - beforeSeek;
+        FlushBuffers(DVD_MSEC_TO_TIME(beforeSeek), true, true);
+        offset = static_cast<int>(beforeSeek) - DVD_TIME_TO_MSEC(start);
+        CLog::Log(LOGDEBUG, "VideoPlayer: SeekChapter:%d beforeSeek:%ld start:%ld",  msg.GetChapter(), beforeSeek, (int64_t)DVD_TIME_TO_MSEC(start)); 
         m_callback.OnPlayBackSeekChapter(msg.GetChapter());
       }
 
--- a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp	2017-08-22 23:43:15.624322029 +0200
+++ b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp	2017-08-23 08:52:34.490227481 +0200
@@ -1118,6 +1118,7 @@
   if (m_pFormatContext->start_time != (int64_t)AV_NOPTS_VALUE && !ismp3)
     seek_pts += m_pFormatContext->start_time;
 
+  CLog::Log(LOGDEBUG, "CDVDDemuxFFmpeg::%s - seek pts:%0.4f start_time:%ld", __FUNCTION__, (double)seek_pts/AV_TIME_BASE, m_pFormatContext->start_time);
   int ret;
   {
     CSingleLock lock(m_critSection);
@@ -1146,11 +1146,20 @@
   if(m_currentPts == DVD_NOPTS_VALUE)
     CLog::Log(LOGDEBUG, "%s - unknown position after seek", __FUNCTION__);
   else
-    CLog::Log(LOGDEBUG, "%s - seek ended up on time %d", __FUNCTION__, (int)(m_currentPts / DVD_TIME_BASE * 1000));
-
+  {
+    CLog::Log(LOGDEBUG, "CDVDDemuxFFmpeg::%s - seek ended up on time %d", __FUNCTION__, (int)(m_currentPts / DVD_TIME_BASE * 1000));
+    double diff = (double)seek_pts/AV_TIME_BASE - m_currentPts / DVD_TIME_BASE;
+    if (fabs(diff) > 1.0)
+    {
+      ret = av_seek_frame(m_pFormatContext, -1, seek_pts + (int)(diff *  AV_TIME_BASE / 2), backwards ? AVSEEK_FLAG_BACKWARD : 0);
+      if (ret >= 0)
+        UpdateCurrentPTS();
+      CLog::Log(LOGDEBUG, "CDVDDemuxFFmpeg::%s - Seek ended up on time %d", __FUNCTION__, (int)(m_currentPts / DVD_TIME_BASE * 1000));
+    }  
+  }
   // in this case the start time is requested time
   if (startpts)
-    *startpts = DVD_MSEC_TO_TIME(time);
+    *startpts = DVD_MSEC_TO_TIME(m_currentPts/1000);

  if (ret >= 0)
  {
@@ -1717,7 +1717,9 @@
 
   AVChapter *ch = m_pFormatContext->chapters[chapter-1];
   double dts = ConvertTimestamp(ch->start, ch->time_base.den, ch->time_base.num);
-  return SeekTime(DVD_TIME_TO_MSEC(dts), true, startpts);
+  bool rtn = SeekTime(DVD_TIME_TO_MSEC(dts), true, startpts);
+  CLog::Log(LOGDEBUG, "CDVDDemuxFFmpeg::%s - seeking chapter:%d start:%0.4f dts:%0.4f startpts:%0.4f ", __FUNCTION__, chapter, (double)ch->start * ch->time_base.num  / ch->time_base.den , DVD_TIME_TO_MSEC(dts)/1000.0, *startpts);
+  return rtn;
 }
 
 std::string CDVDDemuxFFmpeg::GetStreamCodecName(int iStreamId)
--
