From c36e20e98eeb14d36c0634ee8014d81cf82c700d Mon Sep 17 00:00:00 2001
From: kszaq <kszaquitto@gmail.com>
Date: Fri, 31 Mar 2017 23:39:05 +0200
Subject: [PATCH] aml: Implement drain

---
 .../cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp | 31 +++++++++++++++++-----
 xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h  |  3 +++
 .../DVDCodecs/Video/DVDVideoCodecAmlogic.cpp       |  6 +++++
 .../DVDCodecs/Video/DVDVideoCodecAmlogic.h         |  1 +
 4 files changed, 35 insertions(+), 6 deletions(-)

diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
index 11b08b5..eba385d 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.cpp
@@ -1389,6 +1389,8 @@ CAMLCodec::CAMLCodec()
   , m_bufferIndex(-1)
   , m_state(0)
   , m_frameSizeSum(0)
+  , m_stallCounter(0)
+  , m_timeSize(0)
 {
   am_private = new am_private_t;
   memset(am_private, 0, sizeof(am_private_t));
@@ -1431,6 +1431,7 @@ bool CAMLCodec::OpenDecoder(CDVDStreamInfo &hints)
 #endif
 
   m_speed = DVD_PLAYSPEED_NORMAL;
+  m_drain = false;
   m_cur_pts = INT64_0;
   m_dst_rect.SetRect(0, 0, 0, 0);
   m_zoom = -1;
@@ -1441,6 +1442,7 @@ bool CAMLCodec::OpenDecoder(CDVDStreamInfo &hints)
   m_state = 0;
   m_frameSizes.clear();
   m_frameSizeSum = 0;
+  m_noPictureLoop = 0;
 
   if (!OpenAmlVideo(hints))
   {
@@ -1799,6 +1801,8 @@ void CAMLCodec::Reset()
   m_start_adj = 0;
   m_frameSizes.clear();
   m_frameSizeSum = 0;
+  m_drain = false;
+  m_noPictureLoop = 0;
 
   SetSpeed(m_speed);
 
@@ -1889,24 +1893,51 @@ int CAMLCodec::Decode(uint8_t *pData, size_t iSize, double dts, double pts)
        m_state |= STATE_PREFILLED;
   }
 
-  if ((m_state & STATE_PREFILLED) != 0 && timesize > 0.5 &&  DequeueBuffer() == 0)
-    rtn |= VC_PICTURE;
+  if (m_drain)
+  {
+    if (DequeueBuffer() == 0)
+    {
+      rtn = VC_PICTURE;
+      m_noPictureLoop = 0;
+    }
+    else if (++m_noPictureLoop == 10 || timesize == 0.0) // EOS
+      rtn = VC_BUFFER;
+  }
+  else
+  {
+    m_noPictureLoop = 0;
 
-  if (((rtn & VC_PICTURE) == 0 && timesize < 2.0) || timesize < 1.0)
-    rtn |= VC_BUFFER;
+    if (rtn == 0 && timesize == m_timeSize)
+      m_stallCounter += 1;
+    else
+      m_stallCounter = 0;
+
+    m_timeSize = timesize;
+
+    if (rtn == 0 && m_stallCounter > 50) {
+      m_stallCounter = 0;
+      CLog::Log(LOGNOTICE, "CAMLCodec::Decode: Stuck, try to get more buffer");
+      rtn |= VC_BUFFER;
+    }
+    if (timesize > 0.0 && DequeueBuffer() == 0)
+      rtn |= VC_PICTURE;
 
+    if (timesize < 1.0)
+      rtn |= VC_BUFFER;
+  }
 
   if (g_advancedSettings.CanLogComponent(LOGVIDEO))
   {
-    CLog::Log(LOGDEBUG, "CAMLCodec::Decode: ret: %d, sz: %u, dts_in: %0.4lf[%llX], pts_in: %0.4lf[%llX], adj:%llu, ptsOut:%0.4f, amlpts:%d, idx:%u, timesize:%0.4f",
+    if (iSize) CLog::Log(LOGDEBUG, "CAMLCodec::Decode: ret: %d, sz: %u, pts:%s dts_in:%0.3f, pts_in:%0.3f, adj:%llu, ptsOut:%0.3f, amlpts:%d, idx:%u, timesize:%0.3f, sc:%u",
       rtn,
       static_cast<unsigned int>(iSize),
-      dts / DVD_TIME_BASE, am_private->am_pkt.avdts,
-      pts / DVD_TIME_BASE, am_private->am_pkt.avpts,
+      (pts == DVD_NOPTS_VALUE) ? "no  " : "yes ", static_cast<float>(am_private->am_pkt.avdts) / PTS_FREQ,
+      static_cast<float>(am_private->am_pkt.avpts) / PTS_FREQ,
       m_start_adj,
       static_cast<float>(m_cur_pts)/PTS_FREQ,
       static_cast<int>(m_cur_pts),
       m_bufferIndex,
-      timesize
+      timesize,
+      m_stallCounter
     );
   }
@@ -2030,7 +2155,7 @@
   struct buf_status bs;
   m_dll->codec_get_vbuf_state(&am_private->vcodec, &bs);
 
-  //CLog::Log(LOGDEBUG, "CAMLCodec::Decode: buf status: s:%d dl:%d fl:%d rp:%u wp:%u",bs.size, bs.data_len, bs.free_len, bs.read_pointer, bs.write_pointer);  
+  //CLog::Log(LOGDEBUG, "CAMLCodec::Decode: buf status: s:%d dl:%d fl:%d rp:%u wp:%u",bs.size, bs.data_len, bs.free_len, bs.read_pointer, bs.write_pointer);  
   while (m_frameSizeSum >  (unsigned int)bs.data_len)
   {
     m_frameSizeSum -= m_frameSizes.front();
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h
index 2885a88363..15bbe1f050 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h
@@ -108,6 +108,9 @@ private:
   std::deque<uint32_t> m_frameSizes;
   std::uint32_t m_frameSizeSum;
 
+  int              m_stallCounter;
+  float            m_timeSize;
+
   static long  m_pollSync;
   static int   m_pollDevice;
 };
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h
index 2885a88..763daee 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/AMLCodec.h
@@ -47,6 +47,7 @@ public:
 
   bool          GetPicture(DVDVideoPicture* pDvdVideoPicture);
   void          SetSpeed(int speed);
+  void          SetDrain(bool drain){m_drain = drain;};
   void          SetVideoRect(const CRect &SrcRect, const CRect &DestRect);
   void          SetVideoRate(int videoRate);
   int64_t       GetCurPts() const { return m_cur_pts + m_start_adj; }
@@ -78,6 +79,8 @@ private:
   DllLibAmCodec   *m_dll;
   bool             m_opened;
   bool             m_ptsIs64us;
+  bool             m_drain;
+  int              m_noPictureLoop;
   am_private_t    *am_private;
   CDVDStreamInfo   m_hints;
   int              m_speed;
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
index bcf5247..21a28d0 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.cpp
@@ -393,6 +393,12 @@ void CDVDVideoCodecAmlogic::SetDropState(bool bDrop)
   //SysfsUtils::SetInt("/sys/class/video/freerun_mode", bDrop ? 1 : 0);
 }
 
+void CDVDVideoCodecAmlogic::SetCodecControl(int flags)
+{
+  if (m_Codec)
+    m_Codec->SetDrain((flags & DVD_CODEC_CTRL_DRAIN) != 0);
+}
+
 void CDVDVideoCodecAmlogic::SetSpeed(int iSpeed)
 {
   if (m_Codec)
diff --git a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.h b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.h
index 9e57295..1458b8b 100644
--- a/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.h
+++ b/xbmc/cores/VideoPlayer/DVDCodecs/Video/DVDVideoCodecAmlogic.h
@@ -77,6 +77,7 @@ public:
   virtual bool ClearPicture(DVDVideoPicture* pDvdVideoPicture);
   virtual void SetSpeed(int iSpeed);
   virtual void SetDropState(bool bDrop);
+  virtual void SetCodecControl(int flags);
   virtual const char* GetName(void) { return (const char*)m_pFormatName; }
 
 protected:
-- 
1.8.3.1

