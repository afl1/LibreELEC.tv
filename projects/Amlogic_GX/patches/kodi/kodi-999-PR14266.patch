From a29e49749f38bfb31c4fb4625dea65fd1c3e9fe0 Mon Sep 17 00:00:00 2001
From: Jonas Karlman <jonas@kwiboo.se>
Date: Sun, 5 Aug 2018 12:07:31 +0200
Subject: [PATCH] windowing/gbm: replace WaitVBlank with Sleep

---
 xbmc/windowing/gbm/DRMUtils.cpp                | 8 --------
 xbmc/windowing/gbm/DRMUtils.h                  | 1 -
 xbmc/windowing/gbm/OffScreenModeSetting.h      | 5 -----
 xbmc/windowing/gbm/WinSystemGbm.cpp            | 5 -----
 xbmc/windowing/gbm/WinSystemGbm.h              | 1 -
 xbmc/windowing/gbm/WinSystemGbmGLContext.cpp   | 3 ++-
 xbmc/windowing/gbm/WinSystemGbmGLESContext.cpp | 3 ++-
 7 files changed, 4 insertions(+), 22 deletions(-)

diff --git a/xbmc/windowing/gbm/DRMUtils.cpp b/xbmc/windowing/gbm/DRMUtils.cpp
index 0333c22bb016..94512a308a1b 100644
--- a/xbmc/windowing/gbm/DRMUtils.cpp
+++ b/xbmc/windowing/gbm/DRMUtils.cpp
@@ -31,14 +31,6 @@ CDRMUtils::CDRMUtils()
 {
 }
 
-void CDRMUtils::WaitVBlank()
-{
-  drmVBlank vbl;
-  vbl.request.type = DRM_VBLANK_RELATIVE;
-  vbl.request.sequence = 1;
-  drmWaitVBlank(m_fd, &vbl);
-}
-
 bool CDRMUtils::SetMode(const RESOLUTION_INFO& res)
 {
   m_mode = &m_connector->connector->modes[atoi(res.strId.c_str())];
diff --git a/xbmc/windowing/gbm/DRMUtils.h b/xbmc/windowing/gbm/DRMUtils.h
index 693f4e4f3c9c..cf8f9db7a134 100644
--- a/xbmc/windowing/gbm/DRMUtils.h
+++ b/xbmc/windowing/gbm/DRMUtils.h
@@ -84,7 +84,6 @@ class CDRMUtils
   virtual RESOLUTION_INFO GetCurrentMode();
   virtual std::vector<RESOLUTION_INFO> GetModes();
   virtual bool SetMode(const RESOLUTION_INFO& res);
-  virtual void WaitVBlank();
 
   virtual bool AddProperty(struct drm_object *object, const char *name, uint64_t value) { return false; }
   virtual bool SetProperty(struct drm_object *object, const char *name, uint64_t value) { return false; }
diff --git a/xbmc/windowing/gbm/OffScreenModeSetting.h b/xbmc/windowing/gbm/OffScreenModeSetting.h
index 298c72087431..37fefef12575 100644
--- a/xbmc/windowing/gbm/OffScreenModeSetting.h
+++ b/xbmc/windowing/gbm/OffScreenModeSetting.h
@@ -10,10 +10,6 @@
 
 #include "DRMUtils.h"
 
-#ifdef TARGET_POSIX
-#include "platform/linux/XTimeUtils.h"
-#endif
-
 class COffScreenModeSetting : public CDRMUtils
 {
 public:
@@ -28,7 +24,6 @@ class COffScreenModeSetting : public CDRMUtils
   RESOLUTION_INFO GetCurrentMode() override;
   std::vector<RESOLUTION_INFO> GetModes() override;
   bool SetMode(const RESOLUTION_INFO& res) override { return true; }
-  void WaitVBlank() override { Sleep(20); }
 
 private:
   const int DISPLAY_WIDTH = 1280;
diff --git a/xbmc/windowing/gbm/WinSystemGbm.cpp b/xbmc/windowing/gbm/WinSystemGbm.cpp
index 007838f9897b..2ff50a6264d1 100644
--- a/xbmc/windowing/gbm/WinSystemGbm.cpp
+++ b/xbmc/windowing/gbm/WinSystemGbm.cpp
@@ -242,11 +242,6 @@ void CWinSystemGbm::FlipPage(bool rendered, bool videoLayer)
   m_GBM->ReleaseBuffer();
 }
 
-void CWinSystemGbm::WaitVBlank()
-{
-  m_DRM->WaitVBlank();
-}
-
 bool CWinSystemGbm::UseLimitedColor()
 {
   return CServiceBroker::GetSettings().GetBool(CSettings::SETTING_VIDEOSCREEN_LIMITEDRANGE);
diff --git a/xbmc/windowing/gbm/WinSystemGbm.h b/xbmc/windowing/gbm/WinSystemGbm.h
index 4b65ddb263ec..e52293c893b1 100644
--- a/xbmc/windowing/gbm/WinSystemGbm.h
+++ b/xbmc/windowing/gbm/WinSystemGbm.h
@@ -38,7 +38,6 @@ class CWinSystemGbm : public CWinSystemBase
   bool SetFullScreen(bool fullScreen, RESOLUTION_INFO& res, bool blankOtherDisplays) override;
 
   void FlipPage(bool rendered, bool videoLayer);
-  void WaitVBlank();
 
   bool CanDoWindowed() override { return false; }
   void UpdateResolutions() override;
diff --git a/xbmc/windowing/gbm/WinSystemGbmGLContext.cpp b/xbmc/windowing/gbm/WinSystemGbmGLContext.cpp
index e4a3c65a0e07..58339cef5aa7 100644
--- a/xbmc/windowing/gbm/WinSystemGbmGLContext.cpp
+++ b/xbmc/windowing/gbm/WinSystemGbmGLContext.cpp
@@ -16,6 +16,7 @@
 #include "EGL/eglext.h"
 #include "WinSystemGbmGLContext.h"
 #include "OptionalsReg.h"
+#include "platform/linux/XTimeUtils.h"
 #include "utils/log.h"
 
 using namespace KODI;
@@ -92,7 +93,7 @@ void CWinSystemGbmGLContext::PresentRender(bool rendered, bool videoLayer)
   }
   else
   {
-    CWinSystemGbm::WaitVBlank();
+    Sleep(10);
   }
 
   if (m_delayDispReset && m_dispResetTimer.IsTimePast())
diff --git a/xbmc/windowing/gbm/WinSystemGbmGLESContext.cpp b/xbmc/windowing/gbm/WinSystemGbmGLESContext.cpp
index b2fdc70ccaf2..3641b0e8c50a 100644
--- a/xbmc/windowing/gbm/WinSystemGbmGLESContext.cpp
+++ b/xbmc/windowing/gbm/WinSystemGbmGLESContext.cpp
@@ -18,6 +18,7 @@
 #include "cores/VideoPlayer/VideoRenderers/RenderFactory.h"
 
 #include "OptionalsReg.h"
+#include "platform/linux/XTimeUtils.h"
 #include "utils/log.h"
 #include "WinSystemGbmGLESContext.h"
 
@@ -104,7 +105,7 @@ void CWinSystemGbmGLESContext::PresentRender(bool rendered, bool videoLayer)
   }
   else
   {
-    CWinSystemGbm::WaitVBlank();
+    Sleep(10);
   }
 
   if (m_delayDispReset && m_dispResetTimer.IsTimePast())
