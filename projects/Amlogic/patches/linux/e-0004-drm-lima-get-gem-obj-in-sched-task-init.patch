From 015cbe1e33e391a3eca2d1efaaeb4447fa90ff06 Mon Sep 17 00:00:00 2001
From: Qiang Yu <yuq825@gmail.com>
Date: Sun, 24 Feb 2019 17:34:04 +0800
Subject: [PATCH 4/5] drm/lima: get gem obj in sched task init

Signed-off-by: Qiang Yu <yuq825@gmail.com>
---
 drivers/gpu/drm/lima/lima_gem.c   |  3 +++
 drivers/gpu/drm/lima/lima_sched.c | 14 +++++++++-----
 2 files changed, 12 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/lima/lima_gem.c b/drivers/gpu/drm/lima/lima_gem.c
index b26fa28119bd..7d39ddef2783 100644
--- a/drivers/gpu/drm/lima/lima_gem.c
+++ b/drivers/gpu/drm/lima/lima_gem.c
@@ -333,6 +333,9 @@ int lima_gem_submit(struct drm_file *file, struct lima_submit *submit)
 
 	lima_gem_unlock_bos(bos, submit->nr_bos, &ctx);
 
+	for (i = 0; i < submit->nr_bos; i++)
+		drm_gem_object_put_unlocked(&bos[i]->gem);
+
 	if (out_sync) {
 		drm_syncobj_replace_fence(out_sync, fence);
 		drm_syncobj_put(out_sync);
diff --git a/drivers/gpu/drm/lima/lima_sched.c b/drivers/gpu/drm/lima/lima_sched.c
index 9a77e0d505de..c20c91a351c0 100644
--- a/drivers/gpu/drm/lima/lima_sched.c
+++ b/drivers/gpu/drm/lima/lima_sched.c
@@ -110,13 +110,16 @@ int lima_sched_task_init(struct lima_sched_task *task,
 			 struct lima_bo **bos, int num_bos,
 			 struct lima_vm *vm)
 {
-	int err;
+	int err, i;
 
 	task->bos = kmalloc(sizeof(*bos) * num_bos, GFP_KERNEL);
 	if (!task->bos)
 		return -ENOMEM;
 	memcpy(task->bos, bos, sizeof(*bos) * num_bos);
 
+	for (i = 0; i < num_bos; i++)
+		drm_gem_object_get(&bos[i]->gem);
+
 	err = drm_sched_job_init(&task->base, &context->base, vm);
 	if (err) {
 		kfree(task->bos);
@@ -142,8 +145,11 @@ void lima_sched_task_fini(struct lima_sched_task *task)
 	if (task->dep)
 		kfree(task->dep);
 
-	if (task->bos)
+	if (task->bos) {
+		for (i = 0; i < task->num_bos; i++)
+			drm_gem_object_put_unlocked(&task->bos[i]->gem);
 		kfree(task->bos);
+	}
 
 	lima_vm_put(task->vm);
 }
@@ -339,10 +345,8 @@ static void lima_sched_free_job(struct drm_sched_job *job)
 
 	dma_fence_put(task->fence);
 
-	for (i = 0; i < task->num_bos; i++) {
+	for (i = 0; i < task->num_bos; i++)
 		lima_vm_bo_del(vm, bos[i]);
-		drm_gem_object_put_unlocked(&bos[i]->gem);
-	}
 
 	lima_sched_task_fini(task);
 	kmem_cache_free(pipe->task_slab, task);
-- 
2.17.1

